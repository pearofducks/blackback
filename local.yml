---
- hosts: localhost
  connection: local
  vars:
    serial: "{{ ansible_local.mac.system_profile.serialnumbersystem }}"
    manifestURL: http://gorilla.qck.cm/manifest
    softwareURL: http://gorilla.qck.cm/
  tasks:
  - name: set password policy to 8 characters
    shell: >
      /usr/bin/pwpolicy setglobalpolicy "minChars=8 newPasswordRequired=1"
    when: ansible_local.mac.password_policies.minChars|int < 2
    notify: cleanup keychains
  - name: enable filevault
    shell: /usr/bin/fdesetup enable -defer /usr/local/chordata/.fvk
    when: ansible_local.mac.filevault_encrypted != "true"
  - name: install munki
    osx: >
      url=http://qck.cm/munkitools-2.2.4.2431.pkg
      creates=/usr/local/munki
      state=present
    when: ansible_local.mac.has_munki == "false"
  - name: install munki preferences
    template: >
      src=ManagedInstalls.plist.j2
      dest=/Library/Preferences/ManagedInstalls.plist
      owner=root
      group=wheel
  - name: check in with gorilla
    shell: >
      /usr/local/chordata/anatida/quack
  - name: run munki
    shell: >
      /usr/local/munki/managedsoftwareupdate -a && /usr/local/munki/managedsoftwareupdate --installwithnologout
  handlers:
  - name: cleanup keychains
    shell: >
      mkdir /tmp/keychains
      && cp ~{{ ansible_local.mac.consoleuser }}/Library/Keychains/*.keychain /tmp/keychains/
      && rm -r ~{{ ansible_local.mac.consoleuser }}/Library/Keychains/*
      && cp /tmp/keychains/*.keychain ~{{ ansible_local.mac.consoleuser }}/Library/Keychains/
      && rm -rf /tmp/keychains
